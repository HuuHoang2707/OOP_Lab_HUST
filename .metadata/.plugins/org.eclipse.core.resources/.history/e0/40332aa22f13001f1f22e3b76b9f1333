package hust.soict.globalict.aims.screen.manager;
import hust.soict.globalict.aims.store.*;
import hust.soict.globalict.aims.media.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class StoreManagerScreen extends JFrame{

    private store Store;

    JMenuBar createMenubar() {
        JMenu menu = new JMenu("Options");

        menu.add(new JMenuItem("View store"));

        JMenu smUpdateStore  = new JMenu("Update Store");
        JMenuItem addBook = new JMenuItem ("Add Book");
        smUpdateStore.add(addBook);
        addBook.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed (ActionEvent e) {
                new AddBookToStoreScreen(Store);
            }
        });
        
        smUpdateStore.add(new JMenuItem("Add CD"));
        smUpdateStore.add(new JMenuItem("Add DVD"));
        menu.add(smUpdateStore);
        
        JMenuBar menuBar = new JMenuBar();
        menuBar.setLayout(new FlowLayout(FlowLayout.LEFT));
        menuBar.add(menu);
        return menuBar;
    }

    JPanel createNorth() {
        JPanel north = new JPanel();
        north.setLayout(new BoxLayout(north, BoxLayout.Y_AXIS));
        north.add(createMenubar());
        north.add(createHeader());
        return north;
    }


    JPanel createHeader() {
        JPanel header = new JPanel();

        header.setLayout(new BoxLayout(header, BoxLayout.X_AXIS));

        JLabel title = new JLabel("AIMS");
        title.setFont(new Font(title.getFont().getName(), Font.PLAIN, 50));
        title.setForeground(Color.CYAN);

        header.add(Box.createRigidArea(new Dimension(10, 10)));
        header.add(title);
        header.add(Box.createHorizontalGlue());
        header.add(Box.createRigidArea(new Dimension(10, 10)));
        
        return header;
    }

    JPanel createCenter() {
        JPanel center = new JPanel();
        center.setLayout(new GridLayout(3, 3, 2, 2));

        ArrayList <Media> mediaInStore = Store.getItemInStore();
        for (int i = 0; i < mediaInStore.size(); ++i) {
            MediaStore cell = new MediaStore (mediaInStore.get(i));
            center.add(cell);
        }
        return center;
    }

    public StoreManagerScreen(store Store) {
        this.Store = Store;

        Container cp = getContentPane();
        
        cp.setLayout(new BorderLayout());
        cp.add(createNorth(), BorderLayout.NORTH);
        cp.add(createCenter(), BorderLayout.CENTER);

        setTitle("Store");
        setSize(1024, 768);
        setLocationRelativeTo(null);
        setVisible(true);

    }

    public static void main(String[] args) {
    	store a = new store();
    	DigitalVideoDisc dvd1 = new DigitalVideoDisc("DVD 1", "Category 1", "Director 1", 120, 19.99f);
        DigitalVideoDisc dvd2 = new DigitalVideoDisc("DVD 2", "Category 2", "Director 2", 90, 14.99f);
        DigitalVideoDisc dvd3 = new DigitalVideoDisc("DVD 3", "Category 1", "Director 3", 110, 17.49f);
        DigitalVideoDisc dvd4 = new DigitalVideoDisc("DVD 4", "Category 3", "Director 2", 105, 15.99f);
        DigitalVideoDisc dvd5 = new DigitalVideoDisc("DVD 5", "Category 2", "Director 1", 95, 12.99f);
        DigitalVideoDisc dvd6 = new DigitalVideoDisc("DVD 6", "Category 3", "Director 3", 130, 20.49f);
        DigitalVideoDisc dvd7 = new DigitalVideoDisc("DVD 7", "Category 1", "Director 3", 115, 18.99f);
        DigitalVideoDisc dvd8 = new DigitalVideoDisc("DVD 8", "Category 2", "Director 2", 100, 16.49f);
        DigitalVideoDisc dvd9 = new DigitalVideoDisc("DVD 9", "Category 3", "Director 1", 125, 21.99f);

        // Thêm các đối tượng DVD vào danh sách
        a.addMedia(dvd1);
        a.addMedia(dvd2);
        a.addMedia(dvd3);
        a.addMedia(dvd4);
        a.addMedia(dvd5);
        a.addMedia(dvd6);
        a.addMedia(dvd7);
        a.addMedia(dvd8);
        a.addMedia(dvd9);
        new StoreManagerScreen(a);
    }
}
